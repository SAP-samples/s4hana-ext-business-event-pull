<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sap.cldfnd</groupId>
	<artifactId>behsampleapp</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>behsampleapp Maven Webapp</name>
	<url>http://maven.apache.org</url>
	
	<properties>
		<maven.license.version>1.17</maven.license.version>
		<!-- TODO place your proxy settings here to run tests from Maven -->
		<vmArguments>-Dhttp.proxyHost= -Dhttp.proxyPort= -D$k=$v</vmArguments>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.sap.cloud.s4hana</groupId>
				<artifactId>sdk-bom</artifactId>
				<version>2.12.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>
	
		<!-- Call S/4HANA OData APIs in a type-safe manner -->
		<dependency>
			<groupId>com.sap.cloud.s4hana</groupId>
			<artifactId>datamodel</artifactId>
		</dependency>
		
		<!-- API of Java EE 7 Web Profile TomEE 7 from SAP Business Technology Platform (BTP)-->
		<dependency>
			<groupId>com.sap.cloud</groupId>
			<artifactId>neo-javaee7-wp-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Implementation of the Cloud platform abstraction for core platform functionality on the SAP Business Technology Platform (BTP) -->		
		<dependency>
			<groupId>com.sap.cloud.s4hana.cloudplatform</groupId>
			<artifactId>scp-neo</artifactId>
		</dependency>
		
		<!-- JSON Provider for CXF -->
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		
		<!-- JSON serializer -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		
		<!-- Logging facade used by SAP Business Technology Platform (BTP) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Boilerplate code generator -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- test dependencies -->
		
		<!-- JUnit 4 test framework -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Assertions with Fluent API -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Local mock server to stub responses of S/4HANA APIs -->
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Mocking SAP Business Technology Platform (BTP) specific objects: destinations, user, platform etc -->
		<dependency>
			<groupId>com.sap.cloud.s4hana</groupId>
			<artifactId>testutil</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- SLF4J Logger implementation for testing -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Test REST services -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- assert JSON objects equality -->
		<dependency>
			<groupId>uk.co.datumedge</groupId>
			<artifactId>hamcrest-json</artifactId>
			<version>0.2</version>
			<scope>test</scope>
		</dependency>
		

		<!-- Integration testing framework -->
		<dependency>
			<groupId>org.apache.tomee</groupId>
			<artifactId>arquillian-tomee-embedded</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomee</groupId>
			<artifactId>tomee-embedded</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Java server for running integration tests -->
		<dependency>
			<groupId>org.apache.tomee</groupId>
			<artifactId>tomee-jaxrs</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.el</groupId>
			<artifactId>el-ri</artifactId>
			<version>1.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
	
	<build>
		<finalName>behsampleapp</finalName>
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			
			<!-- mandatory settings for S4HANA SDK -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Import-Package>com.sap.security.auth.service,com.sap.security.um.service.api</Import-Package>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		
			<!-- run unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
				<configuration>
					<reuseForks>false</reuseForks>
					<forkCount>1</forkCount>
					<argLine>${surefireArgLine} ${vmArguments} </argLine>   
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
			</plugin>
			
			<!-- run integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.1</version>
				<configuration>
					<argLine>${failsafe.argLine} ${vmArguments} </argLine>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- measure code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.3</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>                
                			<propertyName>surefireArgLine</propertyName>
            			</configuration>
					</execution>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
			            <id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
							<propertyName>failsafe.argLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-unit</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-results</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/coverage-reports</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/coverage-reports/jacoco-aggregate.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-merge-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-aggregate.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- generate license files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${maven.license.version}</version>
				
				<executions>
					<!-- NOTICE file -->
					<execution>
						<id>update-notice</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
						<configuration>
							<force>true</force>
							<licenseFile>NOTICE</licenseFile>
							<licenseResolver>${project.baseUri}src/main/build</licenseResolver>
							<licenseName>notice</licenseName>
							<inceptionYear>2019</inceptionYear>
							<organizationName>SAP SE or an SAP affiliate company</organizationName>
						</configuration>
					</execution>
					
					<!-- CREDITS file -->
					<execution>
						<id>add-third-party</id>
						<goals>
							<goal>add-third-party</goal>
						</goals>
						<configuration>
							<outputDirectory>.</outputDirectory>
							<thirdPartyFilename>CREDITS</thirdPartyFilename>
							<fileTemplate>./src/main/build/third-party-file.ftl</fileTemplate>
							<sortArtifactByName>true</sortArtifactByName>
							<excludeTransitiveDependencies>true</excludeTransitiveDependencies>
							<includeTransitiveDependencies>false</includeTransitiveDependencies>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
